@model Album

<script src="~/Areas/AdminManager/Content/Jcrop/jquery.Jcrop.min.js"></script>

<script src="~/Areas/AdminManager/Content/fancybox/jquery.fancybox.js"></script>
<script src="~/Areas/AdminManager/Content/fancybox/helpers/jquery.fancybox-buttons.js"></script>


@using (Ajax.BeginForm((string)ViewBag.Process, "Album", new AjaxOptions()
        {
            HttpMethod = "Post",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "tab1",
            OnSuccess = "DefaultView"
        },new {
            enctype= "multipart / form - data" }))
{
            @Html.AntiForgeryToken()
            <fieldset>
                @Html.ValidationSummary(true)
                <!-- Set class to "column-left" or "column-right" on fieldsets to divide the form into columns -->
        @Html.HiddenFor(x => x.ID)
        <p>
            <label>
                Title
            </label>
            @Html.TextBoxFor(x => x.Title, new { @class = "text - input small - input", id = "txtTitle" })
            @Html.ValidationMessageFor(x => x.Title)
            @*<span class="input-notification success png_bg">Successful message</span>*@
            <!-- Classes for input-notification: success, error, information, attention -->
            <br />

        </p>
        <p>
            <label>
                Price
            </label>
            @Html.TextBoxFor(x => x.Price, new { @class = "text - input small - input", id = "txtPrice" })
            @Html.ValidationMessageFor(x => x.Price)
        </p>
        <p>
            <label>
                Genre
            </label>
             @Html.DropDownListFor(x=>x.GenreID,new SelectList((List<Genre>)ViewBag.Genrelist,"ID","Name"))
           
            <br />

        </p>
        <p>
            <label>
                Artist
            </label>
            @Html.DropDownListFor(x => x.ArtistID, new SelectList((List<Artist>)ViewBag.Artistlist, "ID", "Name"))

        </p>
                @Html.HiddenFor(x => x.AlbumArtUrl,new {id= "AlbumArtUrl" });
                <p>
                    <label>Album Picture</label>
                    <input type="hidden" id="coordx1" /><input type="hidden" id="coordx2" /><input type="hidden" id="coordy1" /><input type="hidden" id="coordy2" />
                    
                    <input type="file" onchange="readURL(this)" name="filePicture" id="filePicture" />
                    <div>
                        @if (Model != null && Model.AlbumArtUrl != null)
                {
                            <img id="image" src='@Url.Content(Model.AlbumArtUrl)' width="100" height="75" />
                        }
                        else
                        {
                            <img id="image" src="" style="display: none;" width="100" height="75" />
                        }
                    </div>
                </p>
        <p>
            <input class="button" type="submit" value="Kaydet" />
        </p>
    </fieldset>
    <div class="clear">
    </div>
    <!-- End .clear -->
}


